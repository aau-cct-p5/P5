name: "Build and Publish Android App"

on:
  release:
    types: [published]
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: ./flutter_app/pubspec.yaml

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: ./flutter_app

      - name: Set up keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > android/app/key.jks
        working-directory: ./flutter_app

      - name: Build APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          flutter build apk --release \
          --dart-define=KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD \
          --dart-define=KEY_PASSWORD=$KEY_PASSWORD \
          --dart-define=KEY_ALIAS=$KEY_ALIAS
        working-directory: ./flutter_app

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: flutter_app/build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create GitHub Release and Upload APK
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: release-apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive