name: "Build and Publish iOS App"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CERT_BASE64 }}
          P12_PASSWORD: ${{ secrets.APPSTORE_CERT_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=${RUNNER_TEMP}/build_certificate.p12
          PP_PATH=${RUNNER_TEMP}/build_pp.mobileprovision
          KEYCHAIN_PATH=${RUNNER_TEMP}/app-signing.keychain-db
          
          # Decode and save the certificate and provisioning profile
          echo "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output "$CERTIFICATE_PATH"
          echo "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output "$PP_PATH"
          
          # Create and unlock the keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          
          # Import the .p12 certificate into the keychain
          security import "$CERTIFICATE_PATH" -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          security list-keychain -d user -s "$KEYCHAIN_PATH"
          
          # Allow codesign to access the keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PP_PATH" ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Install Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version-file: flutter_app/pubspec.yaml


      - name: Get Flutter dependencies
        working-directory: flutter_app
        run: flutter pub get

      - name: Build IPA
        working-directory: flutter_app
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist

      - name: Collect IPA artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: flutter_app/build/ios/ipa/*.ipa

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain "$RUNNER_TEMP/app-signing.keychain-db"
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

  release:
    name: Release IPA to Firebase
    needs: build
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download IPA artifact
        uses: actions/download-artifact@v4
        with:
          name: release-ipa

      - name: Upload IPA to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_IOS_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: ios-testers
          file: flutter_app/build/ios/ipa/*.ipa